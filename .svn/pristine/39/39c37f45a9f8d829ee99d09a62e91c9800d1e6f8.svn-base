//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CST.ISIS.Data", "IMAI_IMA", "FG_IMAGE_INFO", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CST.ISIS.Data.FG_IMAGE_INFO), "FG_IMAGE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CST.ISIS.Data.FG_IMAGE), true)]
[assembly: EdmRelationshipAttribute("CST.ISIS.Data", "IMAI_PROIS", "FG_IMAGE_INFO", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CST.ISIS.Data.FG_IMAGE_INFO), "FG_PROD_IMAGE_SET", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CST.ISIS.Data.FG_PROD_IMAGE_SET), true)]
[assembly: EdmRelationshipAttribute("CST.ISIS.Data", "MIMT_IMAI", "FG_MIME_TYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CST.ISIS.Data.FG_MIME_TYPE), "FG_IMAGE_INFO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CST.ISIS.Data.FG_IMAGE_INFO), true)]
[assembly: EdmRelationshipAttribute("CST.ISIS.Data", "IMAS_PROIS", "FG_IMAGE_SET", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CST.ISIS.Data.FG_IMAGE_SET), "FG_PROD_IMAGE_SET", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CST.ISIS.Data.FG_PROD_IMAGE_SET), true)]

#endregion

namespace CST.ISIS.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class IsisEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new IsisEntities object using the connection string found in the 'IsisEntities' section of the application configuration file.
        /// </summary>
        public IsisEntities() : base("name=IsisEntities", "IsisEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new IsisEntities object.
        /// </summary>
        public IsisEntities(string connectionString) : base(connectionString, "IsisEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new IsisEntities object.
        /// </summary>
        public IsisEntities(EntityConnection connection) : base(connection, "IsisEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FG_IMAGE> FG_IMAGE
        {
            get
            {
                if ((_FG_IMAGE == null))
                {
                    _FG_IMAGE = base.CreateObjectSet<FG_IMAGE>("FG_IMAGE");
                }
                return _FG_IMAGE;
            }
        }
        private ObjectSet<FG_IMAGE> _FG_IMAGE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FG_IMAGE_INFO> FG_IMAGE_INFO
        {
            get
            {
                if ((_FG_IMAGE_INFO == null))
                {
                    _FG_IMAGE_INFO = base.CreateObjectSet<FG_IMAGE_INFO>("FG_IMAGE_INFO");
                }
                return _FG_IMAGE_INFO;
            }
        }
        private ObjectSet<FG_IMAGE_INFO> _FG_IMAGE_INFO;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FG_IMAGE_SET> FG_IMAGE_SET
        {
            get
            {
                if ((_FG_IMAGE_SET == null))
                {
                    _FG_IMAGE_SET = base.CreateObjectSet<FG_IMAGE_SET>("FG_IMAGE_SET");
                }
                return _FG_IMAGE_SET;
            }
        }
        private ObjectSet<FG_IMAGE_SET> _FG_IMAGE_SET;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FG_MIME_TYPE> FG_MIME_TYPE
        {
            get
            {
                if ((_FG_MIME_TYPE == null))
                {
                    _FG_MIME_TYPE = base.CreateObjectSet<FG_MIME_TYPE>("FG_MIME_TYPE");
                }
                return _FG_MIME_TYPE;
            }
        }
        private ObjectSet<FG_MIME_TYPE> _FG_MIME_TYPE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FG_PROD_IMAGE_SET> FG_PROD_IMAGE_SET
        {
            get
            {
                if ((_FG_PROD_IMAGE_SET == null))
                {
                    _FG_PROD_IMAGE_SET = base.CreateObjectSet<FG_PROD_IMAGE_SET>("FG_PROD_IMAGE_SET");
                }
                return _FG_PROD_IMAGE_SET;
            }
        }
        private ObjectSet<FG_PROD_IMAGE_SET> _FG_PROD_IMAGE_SET;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesDept> SalesDepts
        {
            get
            {
                if ((_SalesDepts == null))
                {
                    _SalesDepts = base.CreateObjectSet<SalesDept>("SalesDepts");
                }
                return _SalesDepts;
            }
        }
        private ObjectSet<SalesDept> _SalesDepts;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FG_IMAGE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFG_IMAGE(FG_IMAGE fG_IMAGE)
        {
            base.AddObject("FG_IMAGE", fG_IMAGE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FG_IMAGE_INFO EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFG_IMAGE_INFO(FG_IMAGE_INFO fG_IMAGE_INFO)
        {
            base.AddObject("FG_IMAGE_INFO", fG_IMAGE_INFO);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FG_IMAGE_SET EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFG_IMAGE_SET(FG_IMAGE_SET fG_IMAGE_SET)
        {
            base.AddObject("FG_IMAGE_SET", fG_IMAGE_SET);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FG_MIME_TYPE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFG_MIME_TYPE(FG_MIME_TYPE fG_MIME_TYPE)
        {
            base.AddObject("FG_MIME_TYPE", fG_MIME_TYPE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FG_PROD_IMAGE_SET EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFG_PROD_IMAGE_SET(FG_PROD_IMAGE_SET fG_PROD_IMAGE_SET)
        {
            base.AddObject("FG_PROD_IMAGE_SET", fG_PROD_IMAGE_SET);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SalesDepts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSalesDepts(SalesDept salesDept)
        {
            base.AddObject("SalesDepts", salesDept);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CST.ISIS.Data", Name="FG_IMAGE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FG_IMAGE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FG_IMAGE object.
        /// </summary>
        /// <param name="fG_IMAGE_ID">Initial value of the FG_IMAGE_ID property.</param>
        public static FG_IMAGE CreateFG_IMAGE(global::System.Decimal fG_IMAGE_ID)
        {
            FG_IMAGE fG_IMAGE = new FG_IMAGE();
            fG_IMAGE.FG_IMAGE_ID = fG_IMAGE_ID;
            return fG_IMAGE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal FG_IMAGE_ID
        {
            get
            {
                return _FG_IMAGE_ID;
            }
            set
            {
                if (_FG_IMAGE_ID != value)
                {
                    OnFG_IMAGE_IDChanging(value);
                    ReportPropertyChanging("FG_IMAGE_ID");
                    _FG_IMAGE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FG_IMAGE_ID");
                    OnFG_IMAGE_IDChanged();
                }
            }
        }
        private global::System.Decimal _FG_IMAGE_ID;
        partial void OnFG_IMAGE_IDChanging(global::System.Decimal value);
        partial void OnFG_IMAGE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] FG_IMAGE_DATA
        {
            get
            {
                return StructuralObject.GetValidValue(_FG_IMAGE_DATA);
            }
            set
            {
                OnFG_IMAGE_DATAChanging(value);
                ReportPropertyChanging("FG_IMAGE_DATA");
                _FG_IMAGE_DATA = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FG_IMAGE_DATA");
                OnFG_IMAGE_DATAChanged();
            }
        }
        private global::System.Byte[] _FG_IMAGE_DATA;
        partial void OnFG_IMAGE_DATAChanging(global::System.Byte[] value);
        partial void OnFG_IMAGE_DATAChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CST.ISIS.Data", "IMAI_IMA", "FG_IMAGE_INFO")]
        public FG_IMAGE_INFO FG_IMAGE_INFO
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FG_IMAGE_INFO>("CST.ISIS.Data.IMAI_IMA", "FG_IMAGE_INFO").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FG_IMAGE_INFO>("CST.ISIS.Data.IMAI_IMA", "FG_IMAGE_INFO").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FG_IMAGE_INFO> FG_IMAGE_INFOReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FG_IMAGE_INFO>("CST.ISIS.Data.IMAI_IMA", "FG_IMAGE_INFO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FG_IMAGE_INFO>("CST.ISIS.Data.IMAI_IMA", "FG_IMAGE_INFO", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CST.ISIS.Data", Name="FG_IMAGE_INFO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FG_IMAGE_INFO : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FG_IMAGE_INFO object.
        /// </summary>
        /// <param name="fG_IMAGE_ID">Initial value of the FG_IMAGE_ID property.</param>
        /// <param name="fG_MIME_TYPE_CD">Initial value of the FG_MIME_TYPE_CD property.</param>
        /// <param name="fG_DESCRIPTION">Initial value of the FG_DESCRIPTION property.</param>
        public static FG_IMAGE_INFO CreateFG_IMAGE_INFO(global::System.Decimal fG_IMAGE_ID, global::System.String fG_MIME_TYPE_CD, global::System.String fG_DESCRIPTION)
        {
            FG_IMAGE_INFO fG_IMAGE_INFO = new FG_IMAGE_INFO();
            fG_IMAGE_INFO.FG_IMAGE_ID = fG_IMAGE_ID;
            fG_IMAGE_INFO.FG_MIME_TYPE_CD = fG_MIME_TYPE_CD;
            fG_IMAGE_INFO.FG_DESCRIPTION = fG_DESCRIPTION;
            return fG_IMAGE_INFO;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal FG_IMAGE_ID
        {
            get
            {
                return _FG_IMAGE_ID;
            }
            set
            {
                if (_FG_IMAGE_ID != value)
                {
                    OnFG_IMAGE_IDChanging(value);
                    ReportPropertyChanging("FG_IMAGE_ID");
                    _FG_IMAGE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FG_IMAGE_ID");
                    OnFG_IMAGE_IDChanged();
                }
            }
        }
        private global::System.Decimal _FG_IMAGE_ID;
        partial void OnFG_IMAGE_IDChanging(global::System.Decimal value);
        partial void OnFG_IMAGE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FG_MIME_TYPE_CD
        {
            get
            {
                return _FG_MIME_TYPE_CD;
            }
            set
            {
                OnFG_MIME_TYPE_CDChanging(value);
                ReportPropertyChanging("FG_MIME_TYPE_CD");
                _FG_MIME_TYPE_CD = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FG_MIME_TYPE_CD");
                OnFG_MIME_TYPE_CDChanged();
            }
        }
        private global::System.String _FG_MIME_TYPE_CD;
        partial void OnFG_MIME_TYPE_CDChanging(global::System.String value);
        partial void OnFG_MIME_TYPE_CDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FG_DESCRIPTION
        {
            get
            {
                return _FG_DESCRIPTION;
            }
            set
            {
                OnFG_DESCRIPTIONChanging(value);
                ReportPropertyChanging("FG_DESCRIPTION");
                _FG_DESCRIPTION = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FG_DESCRIPTION");
                OnFG_DESCRIPTIONChanged();
            }
        }
        private global::System.String _FG_DESCRIPTION;
        partial void OnFG_DESCRIPTIONChanging(global::System.String value);
        partial void OnFG_DESCRIPTIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FG_FILE_NAME
        {
            get
            {
                return _FG_FILE_NAME;
            }
            set
            {
                OnFG_FILE_NAMEChanging(value);
                ReportPropertyChanging("FG_FILE_NAME");
                _FG_FILE_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FG_FILE_NAME");
                OnFG_FILE_NAMEChanged();
            }
        }
        private global::System.String _FG_FILE_NAME;
        partial void OnFG_FILE_NAMEChanging(global::System.String value);
        partial void OnFG_FILE_NAMEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CST.ISIS.Data", "IMAI_IMA", "FG_IMAGE")]
        public FG_IMAGE FG_IMAGE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FG_IMAGE>("CST.ISIS.Data.IMAI_IMA", "FG_IMAGE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FG_IMAGE>("CST.ISIS.Data.IMAI_IMA", "FG_IMAGE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FG_IMAGE> FG_IMAGEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FG_IMAGE>("CST.ISIS.Data.IMAI_IMA", "FG_IMAGE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FG_IMAGE>("CST.ISIS.Data.IMAI_IMA", "FG_IMAGE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CST.ISIS.Data", "IMAI_PROIS", "FG_PROD_IMAGE_SET")]
        public EntityCollection<FG_PROD_IMAGE_SET> FG_PROD_IMAGE_SET
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FG_PROD_IMAGE_SET>("CST.ISIS.Data.IMAI_PROIS", "FG_PROD_IMAGE_SET");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FG_PROD_IMAGE_SET>("CST.ISIS.Data.IMAI_PROIS", "FG_PROD_IMAGE_SET", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CST.ISIS.Data", "MIMT_IMAI", "FG_MIME_TYPE")]
        public FG_MIME_TYPE FG_MIME_TYPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FG_MIME_TYPE>("CST.ISIS.Data.MIMT_IMAI", "FG_MIME_TYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FG_MIME_TYPE>("CST.ISIS.Data.MIMT_IMAI", "FG_MIME_TYPE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FG_MIME_TYPE> FG_MIME_TYPEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FG_MIME_TYPE>("CST.ISIS.Data.MIMT_IMAI", "FG_MIME_TYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FG_MIME_TYPE>("CST.ISIS.Data.MIMT_IMAI", "FG_MIME_TYPE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CST.ISIS.Data", Name="FG_IMAGE_SET")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FG_IMAGE_SET : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FG_IMAGE_SET object.
        /// </summary>
        /// <param name="fG_IMAGE_SET_CD">Initial value of the FG_IMAGE_SET_CD property.</param>
        public static FG_IMAGE_SET CreateFG_IMAGE_SET(global::System.String fG_IMAGE_SET_CD)
        {
            FG_IMAGE_SET fG_IMAGE_SET = new FG_IMAGE_SET();
            fG_IMAGE_SET.FG_IMAGE_SET_CD = fG_IMAGE_SET_CD;
            return fG_IMAGE_SET;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FG_IMAGE_SET_CD
        {
            get
            {
                return _FG_IMAGE_SET_CD;
            }
            set
            {
                if (_FG_IMAGE_SET_CD != value)
                {
                    OnFG_IMAGE_SET_CDChanging(value);
                    ReportPropertyChanging("FG_IMAGE_SET_CD");
                    _FG_IMAGE_SET_CD = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FG_IMAGE_SET_CD");
                    OnFG_IMAGE_SET_CDChanged();
                }
            }
        }
        private global::System.String _FG_IMAGE_SET_CD;
        partial void OnFG_IMAGE_SET_CDChanging(global::System.String value);
        partial void OnFG_IMAGE_SET_CDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FG_DESCRIPTION
        {
            get
            {
                return _FG_DESCRIPTION;
            }
            set
            {
                OnFG_DESCRIPTIONChanging(value);
                ReportPropertyChanging("FG_DESCRIPTION");
                _FG_DESCRIPTION = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FG_DESCRIPTION");
                OnFG_DESCRIPTIONChanged();
            }
        }
        private global::System.String _FG_DESCRIPTION;
        partial void OnFG_DESCRIPTIONChanging(global::System.String value);
        partial void OnFG_DESCRIPTIONChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CST.ISIS.Data", "IMAS_PROIS", "FG_PROD_IMAGE_SET")]
        public EntityCollection<FG_PROD_IMAGE_SET> FG_PROD_IMAGE_SET
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FG_PROD_IMAGE_SET>("CST.ISIS.Data.IMAS_PROIS", "FG_PROD_IMAGE_SET");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FG_PROD_IMAGE_SET>("CST.ISIS.Data.IMAS_PROIS", "FG_PROD_IMAGE_SET", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CST.ISIS.Data", Name="FG_MIME_TYPE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FG_MIME_TYPE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FG_MIME_TYPE object.
        /// </summary>
        /// <param name="fG_MIME_TYPE_CD">Initial value of the FG_MIME_TYPE_CD property.</param>
        /// <param name="fG_DESCRIPTION">Initial value of the FG_DESCRIPTION property.</param>
        /// <param name="fG_CONTENT_TYPE">Initial value of the FG_CONTENT_TYPE property.</param>
        /// <param name="fG_FILE_EXT">Initial value of the FG_FILE_EXT property.</param>
        public static FG_MIME_TYPE CreateFG_MIME_TYPE(global::System.String fG_MIME_TYPE_CD, global::System.String fG_DESCRIPTION, global::System.String fG_CONTENT_TYPE, global::System.String fG_FILE_EXT)
        {
            FG_MIME_TYPE fG_MIME_TYPE = new FG_MIME_TYPE();
            fG_MIME_TYPE.FG_MIME_TYPE_CD = fG_MIME_TYPE_CD;
            fG_MIME_TYPE.FG_DESCRIPTION = fG_DESCRIPTION;
            fG_MIME_TYPE.FG_CONTENT_TYPE = fG_CONTENT_TYPE;
            fG_MIME_TYPE.FG_FILE_EXT = fG_FILE_EXT;
            return fG_MIME_TYPE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FG_MIME_TYPE_CD
        {
            get
            {
                return _FG_MIME_TYPE_CD;
            }
            set
            {
                if (_FG_MIME_TYPE_CD != value)
                {
                    OnFG_MIME_TYPE_CDChanging(value);
                    ReportPropertyChanging("FG_MIME_TYPE_CD");
                    _FG_MIME_TYPE_CD = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FG_MIME_TYPE_CD");
                    OnFG_MIME_TYPE_CDChanged();
                }
            }
        }
        private global::System.String _FG_MIME_TYPE_CD;
        partial void OnFG_MIME_TYPE_CDChanging(global::System.String value);
        partial void OnFG_MIME_TYPE_CDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FG_DESCRIPTION
        {
            get
            {
                return _FG_DESCRIPTION;
            }
            set
            {
                OnFG_DESCRIPTIONChanging(value);
                ReportPropertyChanging("FG_DESCRIPTION");
                _FG_DESCRIPTION = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FG_DESCRIPTION");
                OnFG_DESCRIPTIONChanged();
            }
        }
        private global::System.String _FG_DESCRIPTION;
        partial void OnFG_DESCRIPTIONChanging(global::System.String value);
        partial void OnFG_DESCRIPTIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FG_CONTENT_TYPE
        {
            get
            {
                return _FG_CONTENT_TYPE;
            }
            set
            {
                OnFG_CONTENT_TYPEChanging(value);
                ReportPropertyChanging("FG_CONTENT_TYPE");
                _FG_CONTENT_TYPE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FG_CONTENT_TYPE");
                OnFG_CONTENT_TYPEChanged();
            }
        }
        private global::System.String _FG_CONTENT_TYPE;
        partial void OnFG_CONTENT_TYPEChanging(global::System.String value);
        partial void OnFG_CONTENT_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FG_FILE_EXT
        {
            get
            {
                return _FG_FILE_EXT;
            }
            set
            {
                OnFG_FILE_EXTChanging(value);
                ReportPropertyChanging("FG_FILE_EXT");
                _FG_FILE_EXT = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FG_FILE_EXT");
                OnFG_FILE_EXTChanged();
            }
        }
        private global::System.String _FG_FILE_EXT;
        partial void OnFG_FILE_EXTChanging(global::System.String value);
        partial void OnFG_FILE_EXTChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CST.ISIS.Data", "MIMT_IMAI", "FG_IMAGE_INFO")]
        public EntityCollection<FG_IMAGE_INFO> FG_IMAGE_INFO
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FG_IMAGE_INFO>("CST.ISIS.Data.MIMT_IMAI", "FG_IMAGE_INFO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FG_IMAGE_INFO>("CST.ISIS.Data.MIMT_IMAI", "FG_IMAGE_INFO", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CST.ISIS.Data", Name="FG_PROD_IMAGE_SET")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FG_PROD_IMAGE_SET : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FG_PROD_IMAGE_SET object.
        /// </summary>
        /// <param name="fG_PROD_CD">Initial value of the FG_PROD_CD property.</param>
        /// <param name="fG_PROD_SETID">Initial value of the FG_PROD_SETID property.</param>
        /// <param name="fG_IMAGE_SET_CD">Initial value of the FG_IMAGE_SET_CD property.</param>
        /// <param name="fG_IMAGE_ID">Initial value of the FG_IMAGE_ID property.</param>
        /// <param name="fG_SORT_ORDER">Initial value of the FG_SORT_ORDER property.</param>
        public static FG_PROD_IMAGE_SET CreateFG_PROD_IMAGE_SET(global::System.String fG_PROD_CD, global::System.String fG_PROD_SETID, global::System.String fG_IMAGE_SET_CD, global::System.Decimal fG_IMAGE_ID, global::System.Decimal fG_SORT_ORDER)
        {
            FG_PROD_IMAGE_SET fG_PROD_IMAGE_SET = new FG_PROD_IMAGE_SET();
            fG_PROD_IMAGE_SET.FG_PROD_CD = fG_PROD_CD;
            fG_PROD_IMAGE_SET.FG_PROD_SETID = fG_PROD_SETID;
            fG_PROD_IMAGE_SET.FG_IMAGE_SET_CD = fG_IMAGE_SET_CD;
            fG_PROD_IMAGE_SET.FG_IMAGE_ID = fG_IMAGE_ID;
            fG_PROD_IMAGE_SET.FG_SORT_ORDER = fG_SORT_ORDER;
            return fG_PROD_IMAGE_SET;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FG_PROD_CD
        {
            get
            {
                return _FG_PROD_CD;
            }
            set
            {
                if (_FG_PROD_CD != value)
                {
                    OnFG_PROD_CDChanging(value);
                    ReportPropertyChanging("FG_PROD_CD");
                    _FG_PROD_CD = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FG_PROD_CD");
                    OnFG_PROD_CDChanged();
                }
            }
        }
        private global::System.String _FG_PROD_CD;
        partial void OnFG_PROD_CDChanging(global::System.String value);
        partial void OnFG_PROD_CDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FG_PROD_SETID
        {
            get
            {
                return _FG_PROD_SETID;
            }
            set
            {
                if (_FG_PROD_SETID != value)
                {
                    OnFG_PROD_SETIDChanging(value);
                    ReportPropertyChanging("FG_PROD_SETID");
                    _FG_PROD_SETID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FG_PROD_SETID");
                    OnFG_PROD_SETIDChanged();
                }
            }
        }
        private global::System.String _FG_PROD_SETID;
        partial void OnFG_PROD_SETIDChanging(global::System.String value);
        partial void OnFG_PROD_SETIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FG_IMAGE_SET_CD
        {
            get
            {
                return _FG_IMAGE_SET_CD;
            }
            set
            {
                if (_FG_IMAGE_SET_CD != value)
                {
                    OnFG_IMAGE_SET_CDChanging(value);
                    ReportPropertyChanging("FG_IMAGE_SET_CD");
                    _FG_IMAGE_SET_CD = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FG_IMAGE_SET_CD");
                    OnFG_IMAGE_SET_CDChanged();
                }
            }
        }
        private global::System.String _FG_IMAGE_SET_CD;
        partial void OnFG_IMAGE_SET_CDChanging(global::System.String value);
        partial void OnFG_IMAGE_SET_CDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal FG_IMAGE_ID
        {
            get
            {
                return _FG_IMAGE_ID;
            }
            set
            {
                if (_FG_IMAGE_ID != value)
                {
                    OnFG_IMAGE_IDChanging(value);
                    ReportPropertyChanging("FG_IMAGE_ID");
                    _FG_IMAGE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FG_IMAGE_ID");
                    OnFG_IMAGE_IDChanged();
                }
            }
        }
        private global::System.Decimal _FG_IMAGE_ID;
        partial void OnFG_IMAGE_IDChanging(global::System.Decimal value);
        partial void OnFG_IMAGE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal FG_SORT_ORDER
        {
            get
            {
                return _FG_SORT_ORDER;
            }
            set
            {
                OnFG_SORT_ORDERChanging(value);
                ReportPropertyChanging("FG_SORT_ORDER");
                _FG_SORT_ORDER = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FG_SORT_ORDER");
                OnFG_SORT_ORDERChanged();
            }
        }
        private global::System.Decimal _FG_SORT_ORDER;
        partial void OnFG_SORT_ORDERChanging(global::System.Decimal value);
        partial void OnFG_SORT_ORDERChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CST.ISIS.Data", "IMAI_PROIS", "FG_IMAGE_INFO")]
        public FG_IMAGE_INFO FG_IMAGE_INFO
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FG_IMAGE_INFO>("CST.ISIS.Data.IMAI_PROIS", "FG_IMAGE_INFO").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FG_IMAGE_INFO>("CST.ISIS.Data.IMAI_PROIS", "FG_IMAGE_INFO").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FG_IMAGE_INFO> FG_IMAGE_INFOReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FG_IMAGE_INFO>("CST.ISIS.Data.IMAI_PROIS", "FG_IMAGE_INFO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FG_IMAGE_INFO>("CST.ISIS.Data.IMAI_PROIS", "FG_IMAGE_INFO", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CST.ISIS.Data", "IMAS_PROIS", "FG_IMAGE_SET")]
        public FG_IMAGE_SET FG_IMAGE_SET
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FG_IMAGE_SET>("CST.ISIS.Data.IMAS_PROIS", "FG_IMAGE_SET").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FG_IMAGE_SET>("CST.ISIS.Data.IMAS_PROIS", "FG_IMAGE_SET").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FG_IMAGE_SET> FG_IMAGE_SETReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FG_IMAGE_SET>("CST.ISIS.Data.IMAS_PROIS", "FG_IMAGE_SET");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FG_IMAGE_SET>("CST.ISIS.Data.IMAS_PROIS", "FG_IMAGE_SET", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CST.ISIS.Data", Name="SalesDept")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesDept : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SalesDept object.
        /// </summary>
        /// <param name="setid">Initial value of the Setid property.</param>
        /// <param name="deptID">Initial value of the DeptID property.</param>
        /// <param name="effDt">Initial value of the EffDt property.</param>
        /// <param name="effStatus">Initial value of the EffStatus property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="descrShort">Initial value of the DescrShort property.</param>
        /// <param name="managerName">Initial value of the ManagerName property.</param>
        public static SalesDept CreateSalesDept(global::System.String setid, global::System.String deptID, global::System.DateTime effDt, global::System.String effStatus, global::System.String description, global::System.String descrShort, global::System.String managerName)
        {
            SalesDept salesDept = new SalesDept();
            salesDept.Setid = setid;
            salesDept.DeptID = deptID;
            salesDept.EffDt = effDt;
            salesDept.EffStatus = effStatus;
            salesDept.Description = description;
            salesDept.DescrShort = descrShort;
            salesDept.ManagerName = managerName;
            return salesDept;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Setid
        {
            get
            {
                return _Setid;
            }
            set
            {
                if (_Setid != value)
                {
                    OnSetidChanging(value);
                    ReportPropertyChanging("Setid");
                    _Setid = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Setid");
                    OnSetidChanged();
                }
            }
        }
        private global::System.String _Setid;
        partial void OnSetidChanging(global::System.String value);
        partial void OnSetidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeptID
        {
            get
            {
                return _DeptID;
            }
            set
            {
                if (_DeptID != value)
                {
                    OnDeptIDChanging(value);
                    ReportPropertyChanging("DeptID");
                    _DeptID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DeptID");
                    OnDeptIDChanged();
                }
            }
        }
        private global::System.String _DeptID;
        partial void OnDeptIDChanging(global::System.String value);
        partial void OnDeptIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffDt
        {
            get
            {
                return _EffDt;
            }
            set
            {
                if (_EffDt != value)
                {
                    OnEffDtChanging(value);
                    ReportPropertyChanging("EffDt");
                    _EffDt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EffDt");
                    OnEffDtChanged();
                }
            }
        }
        private global::System.DateTime _EffDt;
        partial void OnEffDtChanging(global::System.DateTime value);
        partial void OnEffDtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EffStatus
        {
            get
            {
                return _EffStatus;
            }
            set
            {
                if (_EffStatus != value)
                {
                    OnEffStatusChanging(value);
                    ReportPropertyChanging("EffStatus");
                    _EffStatus = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("EffStatus");
                    OnEffStatusChanged();
                }
            }
        }
        private global::System.String _EffStatus;
        partial void OnEffStatusChanging(global::System.String value);
        partial void OnEffStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    OnDescriptionChanging(value);
                    ReportPropertyChanging("Description");
                    _Description = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Description");
                    OnDescriptionChanged();
                }
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DescrShort
        {
            get
            {
                return _DescrShort;
            }
            set
            {
                if (_DescrShort != value)
                {
                    OnDescrShortChanging(value);
                    ReportPropertyChanging("DescrShort");
                    _DescrShort = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DescrShort");
                    OnDescrShortChanged();
                }
            }
        }
        private global::System.String _DescrShort;
        partial void OnDescrShortChanging(global::System.String value);
        partial void OnDescrShortChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ManagerName
        {
            get
            {
                return _ManagerName;
            }
            set
            {
                if (_ManagerName != value)
                {
                    OnManagerNameChanging(value);
                    ReportPropertyChanging("ManagerName");
                    _ManagerName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ManagerName");
                    OnManagerNameChanged();
                }
            }
        }
        private global::System.String _ManagerName;
        partial void OnManagerNameChanging(global::System.String value);
        partial void OnManagerNameChanged();

        #endregion
    
    }

    #endregion
    
}
